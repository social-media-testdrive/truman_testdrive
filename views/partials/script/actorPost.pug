//- Actor Post
.ui.fluid.card.dim(isArticle=(val.module=='digital-literacy' && val.info_text!==""), postNumber = val.post_id, postID=val.id, type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture, class=(val.module=="targeted" && isAd ? "targetedAdPost" : val.module=="habits" ? "habitsHomeDisplay" : ""))
  //- dimmer DIV for flagging
  .ui.dimmer.flag
    .content
      .center
        h2.ui.inverted.icon.header
          i.red.flag.icon
          if val.module=='targeted' && isAd
            |  You've reported this ad!
          else
            |  You've flagged this!
          h3.ui.inverted.header
            if val.module=='targeted' && isAd
              span="The admins will review this ad further. We are sorry you had this experience."
            else
              span="The admins will review this post further. We are sorry you had this experience."
  //- dimmer DIV for hiding post (only in targeted module, for ads)
  if val.module=='targeted' && isAd
    .ui.inverted.dimmer.notflag
      .content
        .center
          h2.ui.inverted.icon.header
            i.eye.slash.icon
            h1.ui.header You've hidden this ad!
  //- Normal Base Post
  .content
    if val.module=='targeted' && isAd
      .ui.right.floated.menu
        .ui.dropdown.icon.item
          i.ellipsis.horizontal.icon
          .menu.fluid.floated.left
            .item(data-value='0')
              i.fitted.circular.close.icon
              | Hide Ad
            .item(data-value='1')
              i.fitted.circular.exclamation.icon
              | Report Ad
            .item(data-value='2')
              i.fitted.circular.question.icon
              | Why Am I Seeing This Ad?
    else
      .right.floated.time.meta= (Date.now() + val.time)
    a.left.floated(href='/user/'+val.actor.username)
      img.ui.avatar.image(src='/images/picture.svg', data-src=cdn+'/profile_pictures/'+val.actor.profile.picture)
      span(id=val.module=='targeted' && isAd ? "companyName" : "")=val.actor.profile.name
  .img.post.image(class=(val.module=='advancedlit' && val.info_text !== "" ? "pointerCursor articleTab" : ""), data-tab=(val.module=='advancedlit' && val.info_text !== "" ? "article" + val.info_text : ""))
    if (val.module=='digital-literacy' && val.info_text!="")           
      img.imageWithModal.openPostDigitalLiteracy(src='/images/picture.svg', data-src=cdn+"/post_pictures/"+val.picture)
    else if (val.module=='digfoot')
      img.imageWithModal.openPostDigfoot(src='/images/picture.svg', data-src=cdn+"/post_pictures/"+val.picture)
    else if (val.module=='esteem')
      img.imageWithModal.openPostEsteem(src='/images/picture.svg', data-src=cdn+"/post_pictures/"+val.picture)
    else
      img(src='/images/picture.svg', data-src=cdn+"/post_pictures/"+val.picture)
    if (val.module=='digital-literacy' && val.info_text!="")
      .read.rounded.right.floated.modual.info_button(id="info_"+val.id, data-info_text = val.info_text)
        i.info.icon
  .content
    if (val.module=='digital-literacy' && val.info_text!="")  
      .description.openPostDigitalLiteracy!=val.body
    else 
      .description!=val.body
        if (val.module=='esteem' && val.info_text!="")
          span.grayText=" "+val.info_text
        if (val.module=='phishing' && val.info_text!="")
          | &nbsp
          span.phishingLink.blueText(phishingPostType=val.type)=val.info_text
  if val.module=='targeted' && isAd
    .content#sponsoredTag
      i.left.floated.external.alternate.icon
      .left.floated.meta="Sponsored"
  .ui.bottom.attached.icon.buttons(class=(val.module=='digital-literacy' && val.info_text!="" || val.module=='advancedlit' && val.info_text!=""? "four" : val.module=='targeted' && isAd ? "two" : "three"))
    .ui.reply.button(tabindex='0')
      i.reply.icon
      |  Reply
    if !(val.module=='targeted' && isAd)
      .ui.flag.button(tabindex='0')
        i.flag.icon
        |  Flag
    if (val.module=='digital-literacy' && val.info_text!="" || val.module=='advancedlit' && val.info_text!="")
      .ui.share.button(tabindex='0')
        i.share.icon
        | Share
    .ui.labeled.button(tabindex='0')
      .ui.like.button(class=val.liked ? "red" : "")
        i.heart.icon
        |  Like
      a.ui.basic.red.left.pointing.label.count=val.likes
  if val.comments.length > 0
    .content
      .ui.comments
        each comment in val.comments
          //- Comment is user-made
          if comment.new_comment
            .comment
              a.avatar.image(href='/me/'+mod)
                if user.profile.picture
                  img(src=cdn+'/profile_pictures/'+user.profile.picture)
                else
                  img(src=user.gravatar(60))
              .content
                a.author(href='/me/'+mod)=user.profile.name || user.username || user.id
                .metadata
                  span.date.sim=(comment.time)
                .text=comment.body
          //- Else this is a normal comment from the script
          else
            .comment(commentID=comment.id)
              a.avatar.image(href='/user/'+comment.actor.username)
                img(src='/images/picture.svg', data-src=cdn+'/profile_pictures/'+comment.actor.profile.picture)
              .content
                a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                .metadata
                  span.date.sim=(Date.now() + comment.time)
                  .rating
                    i.heart.icon(class=comment.liked ? "red" : "")
                    span.num=comment.likes
                    |  Likes
                .text=comment.body
                .actions
                  a.like.comment(class=comment.liked ? "red" : "") Like
                  a.flag.comment Flag
  include components/newUsercomment